Ex)
데이터영역 : 동적 영역 1.스택, 2.힙 3.클래스
	    정적 영역 1.Code 영역 

파이썬에서 변수 값의 주소 = reference 변수
	 	
파이썬에서 함수도 '객체' 로본다.

파이썬에서 함수가 제일어려움(변수한테 함수를 줄수있다 , ★함수는 '자료구조' 가아니다.)

가비지컬렉션 : 변수의 이름이 사라지면 값이 소멸됨 = 가비지컬렉션

파이썬에서 함수도 '객체' 로본다.

★비트연산자 자바 에서 중요

--------------------------------------------------------------------------------------------------
- C는 자유롭지만 유저가 책임져야되지만 자바에서는 서버에 허락을 맡고 하라는대로 해야한다.
 * 자바는 자유롭다.

-자바에서 형변환 자유롭지가 않다.
 
  * ★ 큰쪽으로 형변환하는건 문제가없지만 ★ 작은쪽으로 변환하는건 에러가 생긴다.


-다른언어에서 선언문이 있다.


-자바로 만들 수 있는 것

  *자바 어플리케이션 : 데스크탑 기반 응용 프로그램

  *안드로이드 어플리케이션

★  * 자바 애플릿 : 웹 클라이언트 분야

★  * 자바 서블릿 : 웹 서버분야

★  * Jsp : 웹 서버분야

  * EJB : 기업형 분상컴포넌트 분야


-자바 개발 도구
JDK = JDK + JRE    = 이클립스 (툴)

- 자바가 다른언어와 다른점으로 소스파일의 이름이 소스코드와 연관되어있다는점이다.

★★★
publick class Hello <<의 Hello와  소스파일의 이름이 같아야함.

정적메소드 : stasic

인스턴스 변수 : 객체마다 생성되는 변수
인스턴스 함수 : 객체마다 생성되는 함수
정적 메소드 ( Static void ) : 객체 상관없이 메소드를 생성해서 쓸 수 있는것.

// JVM이 객체생성없이 main() 사용
// 메소드를 호출하여 실행할 수 있도록 하기 위해서 static 키워드 필요

-클래스( Class )
  -객체지 프로그래밍 (oop) 클래스는 특정 종류의 객체 내에 있는 변수와 메소드를 정의하는 일종의 틀 , 템플릿
  -서브클래스는 자신만의 메소드와 변수를 정의할 수 있다.
  -클래스는 전부 혹은 일부를 그 클래스 특성으로부터 상속받는 서브 클래스를 가질 수 있으며 , 
클래스는 각 서브 클래스에 대해 수퍼 클래스가된다.
  -클래스와 그 서브 클래스 간의 구조를 "클래스 계층 ( hierarchy )" 라고함.

package : 경로명 

-  클래스 정의방법
1.package 선언
2. import 구문
3.class 클래스이름{

멤버변수

-생성자

-생성자
}

buffer : 배열 (시스템에서 자동적으로 실행)
> 라이브러리 배열



- 오류  error

 - 컴파일 오류
	
	- 의미오류 :semantic error 계산식에서 서로 교환 되지 못한 다른 타입의 데이터가 포함된 계산할 경우
	- 구문오류 : syntax error

 - 실행오류 run-time error

	-실행  도중에 0으로 나눈 경우

 - 논리오류( local Error)

	-컴파일 실행은 되지만 의도하지 않는 결과를 발생하는 오류



Scanner : 라이브러리에서 제공되는 함수

//  String 클래스, System 클래스 import문을 쓰지않고 사용


new 하면 heap 영역에 잡힌다.

자바 = 기초변수(x, y , donghoon 같은 선언하는거 ) + 참조변수( 데이터의 주소 들어가는 변수 )

파이썬 = 참조변수


예시
Scanner input (객체) = new Scanner(system.in) ;                      //Scanner 객체인 input이다

System.in.read( " 첫번째 수를 입력하세요 : ");
x = input.nextInt();                       

★출력문
- System.out.print

- System.out.println

- System.out.printf

★입력문

- Scanner input(객체) = new Scanner(System.in);

String input = scanner.next() ;  공백 올때까지쓴다.

String input = scanner.nextLine() ; 공백포함 

int input = scanner.nextInt();        정수

double input = scanner.nextDouble();    실수

★ 아스키코드 ( ASCII 코드 ) 8비트 : 영어밖에 지원이안됌 /

- 'A' = 65

- 'a' = 97

- '0' = 48



 파이썬 (UTF-8 ) 32비트 : 다른나라언어까지포함
C  (ASCII ) 8 비트 : 영어만 지원
자바 : ( 유니코드 ) 2바이트 를 주로씀. 아스키코드도 쓸수있음  유니코드는 아스키코드포함하고있음

문자열을 숫자로 변환

- Integer.parseInt('3') > 3

숫자를 문자로 변환

-( char )( 3 + '0' ) > '3'              

숫자를 문자열로 변환

- 3 + " " >> "3"

문자를 문자열로 변환

- '3' + " " >> " 3 "

문자열을 문자로 반환

-charAt( 0 > '3' )



문자형 - char 2byte   자바가 지원하는 유니코드

정수형    - byte  1byte   -128  ~ 127
	- short 2byte
	- int    4byte    -21억 ~ 21억
	- long  8byte    그이상

실수형    - float    4byte 
	- double 8byte

논리형    - boolean 


★ 정수 음수표현 :  1.부호와 절대치
		2. 1의 보수    : 가장 반대되는 수로 바꾼다. 
		3. 2의 보수    : 앞비트에 0을 1로바꾼다. 나머지 뒤에 절대값은 그대로쓴다.


r진법수 (2진법, 8진법, 10진법, 16진법)
 - r-1의 보수
 - r의 보수

10진법 보수 :
                  
0 - 9        ex 제일 반대되는 수로 만들고 1의보수
1 - 8            
2 - 7            1의 보수값에 1더하기
3 - 6         
4 - 5
5 - 4         
6 - 3	 ex 365 10진법 보수만들기
7 - 2		=634 < 1의보수
8 - 1
9 - 0


부호 (S) : 맨 앞 1자리 (가수에대한 )
지수 (E) :
가수 (M) : 24~61 비트

(-1)0승 = 1
(-1)1승 = -1

실수는 음수로 표현할땐 값이문제가아니라 자릿수가 문제다.


참조형 변수 = 주소값이 들어감

지역변수 : 함수내 있는 변수 ()
 - 메소드 호출시 스택에 저장되는 변수
 - 자동초기화 안됨
 - 메소드에서만 사용가능한 변수

매개변수   ( char y ; 객체마다 생성)
 - 메소드 인자값이 전달되는 변수 ,메소드 호출시 스텍에 저장되는 변수
 - 메소드 에서만 사용가능한 변수

인스턴스 변수 
 - 클래스내에서 선언

스태틱 변수 (static int x 변수 )
 - 클래스내에서 선언


★소수형 float (4byte) , double (8byte)

부동소수점 : 유동소수점 [점이 아무곳이나 올 수 있다.]  ★ 값의 손실이 발생한다 { 짤리기때문에 }
ex ) float x = 12.3 ; 부동소수점 표현방식
     float z = 1.23 * 10 1승 을 >> 1.23 * E1 로표현   [과학적표기법 , 고정소수점형]

과학적 표기법( 고정소수점형 )
소수점 이상 자리가 0이아닌 숫자가 한자리만 나오도록 

★논리형 ( boolean )

참과 거짓만있음 ( True , False)

★식별자

1. 첫문자는 문자, '$' , '_' 로 시작해야한다.  (   _ 는 띄어쓰기 대응  )
2. 대소문자 구별한다
3. 공백을 사용할 수 없다.
4. 키워드를 사용하여 변수명을 선언할 수 없다. ( while ,  if , try , new )
5. 유니코드 문자와 숫자의 조합으로 만들어진다 . (한글도 가능)

 식별자 선언 관례
- 일관성 및 통일성
- 알아볼 수 있는 단어를 사용하는 것이 좋다.
- 선언 목적에 따라 접두어를 붙이거나 두단어가 연결되었을 경우 _ 를 사용
- 프로그램에서 변수의 사용 목적에 맞는 단어와 공동 프로젝트에선 팀이 정한 룰에 따른다.


★ 형변환 ( Casting )
 - 수식에서는 큰쪽에 맞춰서 변환  (= 자동형변환, 묵시적형변환)
 - 문장에서는 l-value 에 맞춰서 변환 ( = 명시적형변환)
ex )        int x = 2 , z ;
	float y = 1.2 ;
	z = (int ) (x * y) ;  이렇게 안하면 2.4 로 나옴 (x*y) 안해주면 int가 x만 인식함
	= 2
 - 다운캐스팅 할 경우에는 명시적 형변환 필요